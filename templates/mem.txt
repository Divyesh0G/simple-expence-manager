<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Financial Manager</title>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Include Bootstrap-datepicker CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">

    <!-- Include Chart.js from a reliable source -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Include DataTables CSS and JS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>


    <style>
        body {
            background-color: #1a1a1a;
            color: #e6e6e6;
            padding: 20px;
            font-family: 'Arial', sans-serif;
        }
    
        h1, h2 {
            color: #4CAF50;
        }
    
        .summary-card, .add-transaction-card, .chart-container, .transaction-history-card {
            background-color: #333;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 20px;
            margin-bottom: 20px;

        }
    
        .summary-card p {
            font-size: 18px;
            color: #636363;
        }
    
        .add-transaction-card form {
            max-width: 400px;
            margin: 0 auto;
        }
    
        .form-group {
            margin-bottom: 20px;
        }
    
        .btn-primary {
            background-color: #4CAF50;
            border: none;
            transition: background-color 0.3s;
        }
    
        .btn-primary:hover {
            background-color: #45a049;
        }
    
        .chart-container canvas {
            max-width: 100%;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
    
        table {
            color: #6c757d;
            border-collapse: collapse;
            width: 100%;
        }
    
        .table th, .table td {
            border: 1px solid #4CAF50;
            padding: 12px;
            text-align: left;
            color: #e4e6e7;
        }
    
        .table th {
            background-color: #4CAF50;
            color: #1a1a1a;
        }
    
        .table tr:nth-child(even) {
            background-color: #6c757d;
        }
    
        @media (max-width: 767px) {
            .transaction-history-card {
                margin-top: 0;
            }
        }
        /* Add this style to your existing CSS */
        .datepicker {
            z-index: 9999; /* Ensure the datepicker is on top of other elements */
        }

        .datepicker th,
        .datepicker td {
            color: rgb(23, 53, 25); /* Set text color */
        }

        .datepicker thead th {
            background-color: #4CAF50; /* Set header background color */
            color: #636363; /* Set header text color */
        }

        .datepicker table tr td.today,
        .datepicker table tr td.today:hover {
            background-color: #4CAF50; /* Set header background color */
            color: #636363; /* Set header text color *//* Set today's text color */
        }
    </style>
    
    
</head>

<body>
    <div class="container">
        <h1 class="mt-4">Financial Manager</h1>

        <div class="row mt-4">
            <div class="col-md-6">
                <div class="summary-card">
                    <h2>Summary</h2>
                    <div class="card">
                        <div class="card-body">
                            <p class="card-text">Income: ${{ income }}</p>
                            <p class="card-text">Expenses: ${{ expenses }}</p>
                            <p class="card-text">Net Income: ${{ net_income }}</p>
                        </div>
                    </div>
                </div>

                <div class="add-transaction-card">
                    <h2>Add Transaction</h2>
                    <form action="/add_transaction" method="post">
                        <div class="form-group">
                            <label for="date">Date:</label>
                            <input type="text" name="date" class="form-control datepicker" required>
                        </div>
                        <div class="form-group">
                            <label for="transaction_type">Type:</label>
                            <select class="form-control" id="transaction_type" name="transaction_type">
                                <option value="Income">Income</option>
                                <option value="Expense">Expense</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="category">Category:</label>
                            <select name="category" class="form-control" required>
                                <option value="" selected disabled>Select a category</option>
                                {% for category in categories %}
                                <option value="{{ category }}">{{ category }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="amount">Amount:</label>
                            <input type="number" name="amount" step="0.01" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="transaction_source">Source:</label>
                            <select class="form-control" id="transaction_source" name="transaction_source">
                                <option value="card">Card</option>
                                <option value="cash">Cash</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="notes">Notes:</label>
                            <input type="text" name="notes" class="form-control">
                        </div>
                        <button type="submit" class="btn btn-primary">Add Transaction</button>
                    </form>
                </div>
            </div>

            <div class="col-md-6">
                <div class="chart-container">
                    <h2>Expense Categories Chart</h2>
                    <canvas id="expenseChart"></canvas>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="transaction-history-card">
                    <h2>Transaction History</h2>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Category</th>
                                <th>Type</th>
                                <th>Amount</th>
                                <th>Source</th>
                                <th>Notes</th>
                                <th>Action</th> <!-- Add this column for delete button -->
                            </tr>
                        </thead>
                        <tbody>
                            {% for index, row in df.iterrows() %}
                            <tr>
                                <td>{{ row['Date'] }}</td>
                                <td>{{ row['Category'] }}</td>
                                <td>{{ row['Type'] }}</td>
                                <td>${{ row['Amount'] }}</td>
                                <td>{{ row['Source'] }}</td>
                                <td>{{ row['Notes'] }}</td>
                                <td>
                                    <form action="{{ url_for('delete_transaction', index=index) }}" method="post"
                                        onsubmit="return confirm('Are you sure you want to delete this transaction?');">
                                        <button type="submit" class="btn btn-danger btn-sm">X</button>
                                    </form>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Include Bootstrap JS and Popper.js -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- Include Bootstrap-datepicker JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js">
    </script>

    <script>
        // Initialize the datepicker
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd', // Set the desired date format
                autoclose: true,
                todayHighlight: true
            });
        });
    </script>

    <script>
        // Get expense categories and amounts for the pie chart
        var expenseCategories = {{ df[df['Type'] == 'Expense']['Category'].to_json(orient='values') | safe }};
        var expenseAmounts = {{ df[df['Type'] == 'Expense']['Amount'].to_json(orient='values') | safe }};

        // Convert amounts to numeric values
        expenseAmounts = expenseAmounts.map(Number);

        // Create the pie chart EXPANCE
        var ctx = document.getElementById('expenseChart').getContext('2d');
        var expenseChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: expenseCategories,
                datasets: [{
                    data: expenseAmounts,
                    backgroundColor: [
                    'rgba(75, 192, 192, 0.7)',
                    'rgba(255, 99, 132, 0.7)',
                    'rgba(255, 206, 86, 0.7)',
                    'rgba(54, 162, 235, 0.7)',
                    'rgba(153, 102, 255, 0.7)',
                    'rgba(255, 159, 64, 0.7)',
                    ],
                }],
            },
            options: {
                legend: {
                    labels: {
                        fontColor: '#e6e6e6', // Adjusted legend text color
                    }
                },
            },
        });
    </script>
    <!-- Include DataTables script with Pagination -->
    <script>
        $(document).ready(function () {
            $('#transactionTable').DataTable({
                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );
                            
                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });
                        
                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                },
                "lengthMenu": [10, 20, 50], // Set the default and available page lengths
                "pageLength": 10, // Set the default page length
            });
        });
    </script>

</body>

</html>
